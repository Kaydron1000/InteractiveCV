//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=4.8.9037.0.
// 
namespace InteractiveCV.Configuration {
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    [System.Xml.Serialization.XmlRootAttribute("CVScript", Namespace="http://tempuri.org/CVFunctionsSchema.xsd", IsNullable=false)]
    public partial class CVScriptType {
        
        private CVFunctionType[] cVFunctionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CVFunction", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CVFunctionType[] CVFunction {
            get {
                return this.cVFunctionField;
            }
            set {
                this.cVFunctionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class CVFunctionType {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BlobDetection", typeof(BlobDetectionType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("FindCoutours", typeof(FindCoutoursType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("LoadImage", typeof(LoadImageType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Resize", typeof(ResizeType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("Threshold", typeof(ThresholdType), Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class BlobDetectionType {
        
        private bool filterByAreaField;
        
        private bool filterByCircularityField;
        
        private bool filterByColorField;
        
        private bool filterByConvexityField;
        
        private bool filterByInertiaField;
        
        private sbyte blobColorField;
        
        private float maxAreaField;
        
        private float minAreaField;
        
        private float maxCircularityField;
        
        private float minCircularityField;
        
        private float maxConvexityField;
        
        private float minConvexityField;
        
        private float maxInertiaRatioField;
        
        private float minInertiaRatioField;
        
        private float maxThresholdField;
        
        private float minThresholdField;
        
        private float thresholdStepField;
        
        private float minDistBetweenBlobsField;
        
        private uint minRepeatabilityField;
        
        public BlobDetectionType() {
            this.filterByAreaField = false;
            this.filterByCircularityField = false;
            this.filterByColorField = false;
            this.filterByConvexityField = false;
            this.filterByInertiaField = false;
            this.blobColorField = ((sbyte)(0));
            this.maxAreaField = ((float)(0.3F));
            this.minAreaField = ((float)(0.1F));
            this.maxCircularityField = ((float)(0.3F));
            this.minCircularityField = ((float)(0.1F));
            this.maxConvexityField = ((float)(0.3F));
            this.minConvexityField = ((float)(0.1F));
            this.maxInertiaRatioField = ((float)(0.3F));
            this.minInertiaRatioField = ((float)(0.1F));
            this.maxThresholdField = ((float)(0.3F));
            this.minThresholdField = ((float)(0.1F));
            this.thresholdStepField = ((float)(4F));
            this.minDistBetweenBlobsField = ((float)(1.4F));
            this.minRepeatabilityField = ((uint)(2));
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FilterByArea {
            get {
                return this.filterByAreaField;
            }
            set {
                this.filterByAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FilterByCircularity {
            get {
                return this.filterByCircularityField;
            }
            set {
                this.filterByCircularityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FilterByColor {
            get {
                return this.filterByColorField;
            }
            set {
                this.filterByColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FilterByConvexity {
            get {
                return this.filterByConvexityField;
            }
            set {
                this.filterByConvexityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool FilterByInertia {
            get {
                return this.filterByInertiaField;
            }
            set {
                this.filterByInertiaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(sbyte), "0")]
        public sbyte BlobColor {
            get {
                return this.blobColorField;
            }
            set {
                this.blobColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float MaxArea {
            get {
                return this.maxAreaField;
            }
            set {
                this.maxAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float MinArea {
            get {
                return this.minAreaField;
            }
            set {
                this.minAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float MaxCircularity {
            get {
                return this.maxCircularityField;
            }
            set {
                this.maxCircularityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float MinCircularity {
            get {
                return this.minCircularityField;
            }
            set {
                this.minCircularityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float MaxConvexity {
            get {
                return this.maxConvexityField;
            }
            set {
                this.maxConvexityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float MinConvexity {
            get {
                return this.minConvexityField;
            }
            set {
                this.minConvexityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float MaxInertiaRatio {
            get {
                return this.maxInertiaRatioField;
            }
            set {
                this.maxInertiaRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float MinInertiaRatio {
            get {
                return this.minInertiaRatioField;
            }
            set {
                this.minInertiaRatioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.3")]
        public float MaxThreshold {
            get {
                return this.maxThresholdField;
            }
            set {
                this.maxThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "0.1")]
        public float MinThreshold {
            get {
                return this.minThresholdField;
            }
            set {
                this.minThresholdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "4")]
        public float ThresholdStep {
            get {
                return this.thresholdStepField;
            }
            set {
                this.thresholdStepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "1.4")]
        public float MinDistBetweenBlobs {
            get {
                return this.minDistBetweenBlobsField;
            }
            set {
                this.minDistBetweenBlobsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.ComponentModel.DefaultValueAttribute(typeof(uint), "2")]
        public uint MinRepeatability {
            get {
                return this.minRepeatabilityField;
            }
            set {
                this.minRepeatabilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class FindCoutoursType {
        
        private Enum_RetrievalModes retrievalModesField;
        
        private Enum_ContourApproximationModes contourApproximationModesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Enum_RetrievalModes RetrievalModes {
            get {
                return this.retrievalModesField;
            }
            set {
                this.retrievalModesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Enum_ContourApproximationModes ContourApproximationModes {
            get {
                return this.contourApproximationModesField;
            }
            set {
                this.contourApproximationModesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public enum Enum_RetrievalModes {
        
        /// <remarks/>
        External,
        
        /// <remarks/>
        List,
        
        /// <remarks/>
        CComp,
        
        /// <remarks/>
        Tree,
        
        /// <remarks/>
        FloodFill,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public enum Enum_ContourApproximationModes {
        
        /// <remarks/>
        ApproxNone,
        
        /// <remarks/>
        ApproxSimple,
        
        /// <remarks/>
        ApproxTC89L1,
        
        /// <remarks/>
        ApproxTC89KCOS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class LoadImageType {
        
        private string filePathField;
        
        private Enum_ImreadModes imreadModeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Enum_ImreadModes ImreadMode {
            get {
                return this.imreadModeField;
            }
            set {
                this.imreadModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public enum Enum_ImreadModes {
        
        /// <remarks/>
        Unchanged,
        
        /// <remarks/>
        Grayscale,
        
        /// <remarks/>
        Color,
        
        /// <remarks/>
        AnyDepth,
        
        /// <remarks/>
        AnyColor,
        
        /// <remarks/>
        LoadGdal,
        
        /// <remarks/>
        ReducedGrayscale2,
        
        /// <remarks/>
        ReducedColor2,
        
        /// <remarks/>
        ReducedGrayscale4,
        
        /// <remarks/>
        ReducedColor4,
        
        /// <remarks/>
        ReducedGrayscale8,
        
        /// <remarks/>
        ReducedColor8,
        
        /// <remarks/>
        IgnoreOrientation,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class ThresholdType {
        
        private double thresholdMinValueField;
        
        private double thresholdMaxValueField;
        
        private Enum_Thresholds thresholdType1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ThresholdMinValue {
            get {
                return this.thresholdMinValueField;
            }
            set {
                this.thresholdMinValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public double ThresholdMaxValue {
            get {
                return this.thresholdMaxValueField;
            }
            set {
                this.thresholdMaxValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ThresholdType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Enum_Thresholds ThresholdType1 {
            get {
                return this.thresholdType1Field;
            }
            set {
                this.thresholdType1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public enum Enum_Thresholds {
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        BinaryInv,
        
        /// <remarks/>
        Trunc,
        
        /// <remarks/>
        Tozero,
        
        /// <remarks/>
        TozeroInv,
        
        /// <remarks/>
        Mask,
        
        /// <remarks/>
        Otsu,
        
        /// <remarks/>
        Triangle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public partial class ResizeType {
        
        private int pixelsXField;
        
        private int pixelsYField;
        
        private Enum_InterpolationFlags resizeAlgorithmField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int PixelsX {
            get {
                return this.pixelsXField;
            }
            set {
                this.pixelsXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int PixelsY {
            get {
                return this.pixelsYField;
            }
            set {
                this.pixelsYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Enum_InterpolationFlags ResizeAlgorithm {
            get {
                return this.resizeAlgorithmField;
            }
            set {
                this.resizeAlgorithmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.8.9037.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/CVFunctionsSchema.xsd")]
    public enum Enum_InterpolationFlags {
        
        /// <remarks/>
        Nearest,
        
        /// <remarks/>
        Linear,
        
        /// <remarks/>
        Cubic,
        
        /// <remarks/>
        Area,
        
        /// <remarks/>
        Lanczos4,
        
        /// <remarks/>
        Max,
        
        /// <remarks/>
        WarpFillOutliers,
        
        /// <remarks/>
        WarpInverseMap,
    }
}
